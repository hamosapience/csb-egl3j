{"version":3,"sources":["node_modules/chart.js/dist/chunks/helpers.segment.js","node_modules/chart.js/dist/chart.esm.js","src/index.js"],"names":["fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","noop","uid","id","isNullOrUndef","value","isArray","type","Object","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","undefined","console","warn","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","push","sort","pop","isNumber","n","isNaN","x","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","A","B","C","D","E","F","c","f","hex","h1","h2","eq","isShort","v","r","g","hexParse","ret","hexString","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","exec","rgbString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","names$1","nameParse","transparent","toLowerCase","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","Color","constructor","_rgb","_valid","valid","mix","color","weight","me","c1","c2","w2","w1","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","overrides","descriptors","getScope$1","node","split","set","root","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","_lookup","table","cmp","hi","mid","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","forEach","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","items","Set","add","from","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Proxy","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","filter","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","evt","native","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","getSegment","segment","bounds","startBound","endBound","_boundSegment","inside","prevValue","subStart","startIsBefore","shouldStart","shouldStop","endIsBefore","_boundSegments","segments","sub","findStartAndEnd","solidSegments","last","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","_fullLoop","doSplitByStyles","prevStyle","styleChanged","readStyle","p0","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","to","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","_top","_bottom","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","getAllScaleValues","_cache","$bar","metas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","bars","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","_getStacks","grouped","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","getPixelForDecimal","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","tooltip","title","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","hidden","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","controllers","__proto__","abstract","DateAdapter","formats","timestamp","amount","unit","diff","startOf","weekday","endOf","members","adapters","_date","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","attach","detach","Element","tooltipPosition","getProps","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","tickFont","nestedLabel","highestLabelSize","_resolveTickFontOptions","valueAt","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","error","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","lastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","avNogSpacingRadius","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","prevX","lastY","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","startEnd","swap","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","hasRadius","addNormalRectPath","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getLineByIndex","parseFillOption","fillOption","decodeFill","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","resolveTarget","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","hitbox","boxMap","newBoxes","_draw","defaultColor","rtlHelper","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","innerHTML","myChart","log"],"mappings":"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","file":"src.9151a141.js","sourceRoot":"..","sourcesContent":["/*!\n * Chart.js v3.4.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace) {\n  const {min, max} = minmax;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  let value = target[prop];\n  if (defined(value)) {\n    return value;\n  }\n  value = resolve();\n  if (defined(value)) {\n    target[prop] = value;\n  }\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles([{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(segments, points, segmentOptions);\n}\nfunction doSplitByStyles(segments, points, segmentOptions) {\n  const count = points.length;\n  const result = [];\n  let start = segments[0].start;\n  let i = start;\n  for (const segment of segments) {\n    let prevStyle, style;\n    let prev = points[start % count];\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext({type: 'segment', p0: prev, p1: pt}));\n      if (styleChanged(style, prevStyle)) {\n        result.push({start: start, end: i - 1, loop: segment.loop, style: prevStyle});\n        prevStyle = style;\n        start = i - 1;\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      result.push({start, end: i - 1, loop: segment.loop, style});\n      start = i - 1;\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { merge as $, toPadding as A, each as B, getMaximumSize as C, _getParentNode as D, readUsedSize as E, throttled as F, supportsEventListenerOptions as G, HALF_PI as H, log10 as I, _factorize as J, finiteOrDefault as K, callback as L, _addGrace as M, toDegrees as N, _measureText as O, PI as P, _int16Range as Q, _alignPixel as R, clipArea as S, TAU as T, renderText as U, unclipArea as V, toFont as W, _toLeftRightCenter as X, _alignStartEnd as Y, overrides as Z, _arrayUnique as _, resolve as a, _capitalize as a0, descriptors as a1, isFunction as a2, _attachContext as a3, _createResolver as a4, _descriptors as a5, mergeIf as a6, uid as a7, debounce as a8, retinaScale as a9, niceNum as aA, almostWhole as aB, almostEquals as aC, _decimalPlaces as aD, _longestText as aE, _filterBetween as aF, _lookup as aG, getHoverColor as aH, clone$1 as aI, _merger as aJ, _mergerIf as aK, _deprecated as aL, toFontString as aM, splineCurve as aN, splineCurveMonotone as aO, getStyle as aP, fontString as aQ, toLineHeight as aR, PITAU as aS, INFINITY as aT, RAD_PER_DEG as aU, QUARTER_PI as aV, TWO_THIRDS_PI as aW, _angleDiff as aX, clearCanvas as aa, setsEqual as ab, _elementsEqual as ac, getAngleFromPoint as ad, _readValueToProps as ae, _updateBezierControlPoints as af, _computeSegments as ag, _boundSegments as ah, _steppedInterpolation as ai, _bezierInterpolation as aj, _pointInLine as ak, _steppedLineTo as al, _bezierCurveTo as am, drawPoint as an, addRoundedRectPath as ao, toTRBL as ap, toTRBLCorners as aq, _boundSegment as ar, _normalizeAngle as as, getRtlAdapter as at, overrideTextDirection as au, _textX as av, restoreTextDirection as aw, noop as ax, distanceBetweenPoints as ay, _setMinAndMaxByKey as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, isNullOrUndef as j, toPercentage as k, listenArrayEvents as l, toDimension as m, formatNumber as n, _angleBetween as o, isNumber as p, _limitValue as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _lookupByKey as w, getRelativePosition as x, _isPointInArea as y, _rlookupByKey as z };\n","/*!\n * Chart.js v3.4.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.4.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n      if (rtl) {\n        const boxMap = hitboxes.reduce((map, box) => {\n          map[box.row] = map[box.row] || [];\n          map[box.row].push(box);\n          return map;\n        }, {});\n        const newBoxes = [];\n        Object.keys(boxMap).forEach(key => {\n          boxMap[key].reverse();\n          newBoxes.push(...boxMap[key]);\n        });\n        me.legendHitBoxes = newBoxes;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import \"./styles.css\";\nimport {\n  Chart,\n  RadarController,\n  LinearScale,\n  LineController,\n  LineElement,\n  RadialLinearScale,\n  PointElement\n} from \"chart.js\";\n\nconst data = {\n  labels: [\n    \"Eating\",\n    \"Drinking\",\n    \"Sleeping\",\n    \"Designing\",\n    \"Coding\",\n    \"Cycling\",\n    \"Running\"\n  ],\n  datasets: [\n    {\n      label: \"My First Dataset\",\n      data: [65, 59, 90, 81, 56, 55, 40],\n      fill: true,\n      backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n      borderColor: \"rgb(255, 99, 132)\",\n      pointBackgroundColor: \"rgb(255, 99, 132)\",\n      pointBorderColor: \"#fff\",\n      pointHoverBackgroundColor: \"#fff\",\n      pointHoverBorderColor: \"rgb(255, 99, 132)\"\n    },\n    {\n      label: \"My Second Dataset\",\n      data: [28, 48, 40, 19, 96, 27, 100],\n      fill: true,\n      backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n      borderColor: \"rgb(54, 162, 235)\",\n      pointBackgroundColor: \"rgb(54, 162, 235)\",\n      pointBorderColor: \"#fff\",\n      pointHoverBackgroundColor: \"#fff\",\n      pointHoverBorderColor: \"rgb(54, 162, 235)\"\n    }\n  ]\n};\n\nconst config = {\n  type: \"radar\",\n  data: data,\n  options: {\n    elements: {\n      line: {\n        borderWidth: 3\n      }\n    }\n  }\n};\n\nChart.register(\n  LineElement,\n  LineController,\n  RadarController,\n  LinearScale,\n  RadialLinearScale,\n  PointElement\n);\n\ndocument.getElementById(\"app\").innerHTML = `\n<h1>Hello Vanilla!</h1>\n<canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n`;\n\nvar myChart = new Chart(document.getElementById(\"myChart\"), config);\n\nconsole.log(\"asdfasdf\");\n"]}